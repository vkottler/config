---
name: Yambs Project

on:
  push:
    branches: [{{project.main_branch}}]
  pull_request:
    branches: [{{project.main_branch}}]

env:
  GITHUB_API_TOKEN: ${{"{{secrets.API_TOKEN}}"}}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]
    env:
      PYTHON_VERSION: ${{"{{matrix.python-version}}"}}

    steps:
      - uses: actions/checkout@master
        with:
          submodules: recursive

      - uses: seanmiddleditch/gha-setup-ninja@master
        with:
          version: 1.11.1

      - name: python${{"{{matrix.python-version}}"}} setup
        uses: actions/setup-python@main
        with:
          python-version: ${{"{{matrix.python-version}}"}}
          cache: pip

      - run: pip${{"{{matrix.python-version}}"}} install vmklib>=1.8.0 yambs

      - run: mk dz-sync

      - run: mk yaml python-lint python-sa
{% if "embedded" not in project and not project["embedded"] %}

      - run: sudo apt-get install lcov doxygen clang-15 clang-format-15

      - run: mk t variant=clang coverage=false
{% else %}
      - run: sudo apt-get install doxygen clang-format-15
      - run: mk download-toolchains
      - run: mk g
{% endif %}
      - run: ninja all format-check

      - run: mk dist docs{% if project.get("embedded") %} variant={{project["name"]}}{% endif %}

        if: github.ref_name != '{{project.main_branch}}'
{% if "embedded" not in project and not project["embedded"] %}

      # Need to clean because codecov is not finding coverage otherwise.
      - run: mk c keep=debug
      - run: mk t

      - uses: codecov/codecov-action@v3
        with:
          gcov: true
          gcov_include: build/debug
          gcov_ignore: .mypy_cache
          gcov_executable: gcov-12
          fail_ci_if_error: true
          verbose: true
{% endif %}

      - run: mk release{% if project.get("embedded") %} variant={{project["name"]}}{% endif %}

        if: |
          env.GITHUB_API_TOKEN != ''
          && github.ref_name == '{{project.main_branch}}'
